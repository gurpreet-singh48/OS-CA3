#include<stdio.h>
#include<stdlib.h>
#include<conio.h>

int main()
{
	int n,i,j,temp;
	int art[100],bst[100],cmt[100],srtart[100],srtbst[100],actcmp[100],arvtime[100],check;
	printf("Enter the number of processes : ");
	scanf("%d",&n);
	check  = n;
	for(i = 0;i<n;i++)
	{
		printf("PROCESS P%d :- \n",i+1);
		printf("Arrival time : ");
		scanf("%d",&art[i]);
		printf("Burst time : ");
		scanf("%d",&bst[i]);		
	}
	for(i=0;i<n;i++)
	{
		srtart[i] = art[i];
	}

	for(i =0;i<n-1;i++)
	{
		for(j=0;j<n-i-1;j++)
		{
			if(srtart[j] > srtart[j+1])
			{
				temp = srtart[j];
				srtart[j] = srtart[j+1];
				srtart[j+1] = temp;
 			}
		}
	}
	
	for(i = 0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if(srtart[i] == art[j])
			{
				srtbst[i] = bst[j];
			}
		}
	}
	for(int i=0;i<n;i++)
	{
		printf("%d %d\n",srtart[i],srtbst[i]);
	}
	for(i=0;i<n;i++)
	{
		if(srtbst[i] == 3)
		{
			if(i == 0)
			{
				srtbst[i] = srtbst[i] -3;
				cmt[i] = 3;
			}
			else
			{
				cmt[i] = cmt[i-1] + 3;
				srtbst[i] = 0;
			}
		}
		else if(srtbst[i] > 3)
		{
			if(i == 0)
			{
				srtbst[i] = srtbst[i] -3;
				cmt[i] = 3;
			}
			else
			{
				cmt[i] = cmt[i-1] + 3;
				srtbst[i] = srtbst[i] -3;
			}
		}
		else
		{
			if(i == 0)
			{
				cmt[i] = srtbst[i];
				srtbst[i] = 0;
			}
			else
			{
				cmt[i] = cmt[i-1] + srtbst[i];
				srtbst[i] = 0;
			}
			 
		}
	}
	int zerobst=0;
	for(i = 0;i<n;i++)
	{
		if(srtbst[i] == 0)
		{
			actcmp[zerobst] = cmt[i];
			arvtime[zerobst] = srtart[i];
			zerobst = zerobst + 1;
		for(j = i;j<n;j++)
		{
			srtbst[j] = srtbst[j+1];
			cmt[j] = cmt[j+1];
			srtart[j] = srtart[j+1];
		}
		    n=n-1;
	    }
	    else
	    {
	    	continue;
		}
	}
	printf("\n\n");
	for(i=0;i<n;i++)
	{
		printf("%d %d \n",srtbst[i],cmt[i]);
	}
	printf("-----------");
	for(i=0;i<zerobst;i++)
	{
		printf("%d %d \n",arvtime[i],actcmp[i]);
	}
	int lastcmt;
	if(arvtime[zerobst-1] == check )
	{
		lastcmt = actcmp[zerobst-1];
	}
	else
	{
		lastcmt = srtbst[n-1];
	}
	for(i =0;i<n;i++)
	{
		if(srtbst[i] == 6)
		{
			if(i == 0)
			{
				srtbst[i] = srtbst[i] -6;
				cmt[i] = 6 + lastcmt;
			}
			else
			{
				srtbst[i] = srtbst[i] - 6;
				cmt[i] = cmt[i-1] + 6;
			}
		}
		else if(srtbst[i] > 6)
		{
			if(i == 0)
			{
				srtbst[i] = srtbst[i] -6;
				cmt[i] = 6 + lastcmt;
			}
			else
			{
				srtbst[i] = srtbst[i] -6;
				cmt[i] = cmt[i-1]+ 6;
			}
		}
		else
		{
			if(i == 0)
			{
				cmt[i] = srtbst[i] + lastcmt;
				srtbst[i] = 0;
			}
			else
			{
				cmt[i] = cmt[i-1] + srtbst[i];
				srtbst[i] = 0;
			}
			 
		}
	}
	
	printf(" n is %d\n\n",n);
	for(i =0;i<n;i++)
	{
		printf("%d %d\n",srtbst[i],cmt[i]);
	}
	for(i = 0;i<n;i++)
	{
		if(srtbst[i] == 0)
		{
			actcmp[zerobst] = cmt[i];
			arvtime[zerobst] = srtart[i];
			zerobst = zerobst + 1;
		for(j = i;j<n;j++)
		{
			srtbst[j] = srtbst[j+1];
			cmt[j] = cmt[j+1];
			srtart[j] = srtart[j+1];
		}
		    n=n-1;
	    }
	    else
	    {
	    	continue;
		}
	}
	
	printf("\n\n");
	for(i=0;i<n;i++)
	{
		printf("%d %d\n",srtbst[i],cmt[i]);
	}
	printf("\n\n");
	for(i=0;i<zerobst;i++)
	{
		printf("%d %d \n",arvtime[i],actcmp[i]);
	}
	lastcmt = actcmp[zerobst-1];
	for(i=0;i<n;i++)
	{
		if(i == 0)
		{
			cmt[i] = lastcmt + srtbst[i];
			srtbst[i] = 0;
		}
		
		else
		{
			cmt[i] = cmt[i-1] + srtbst[i];
			srtbst[i] = 0;
		}
 	}
	

	for(i = 0;i<n;i++)
	{
		if(srtbst[i] == 0)
		{
			actcmp[zerobst] = cmt[i];
			arvtime[zerobst] = srtart[i];
			zerobst = zerobst + 1;
		for(j = i;j<n;j++)
		{
			srtbst[j] = srtbst[j+1];
			cmt[j] = cmt[j+1];
			srtart[j] = srtart[j+1];
		}
		    n=n-1;
	    }
	    else
	    {
	    	continue;
		}
	}
	
	
	printf("\n\n");
	for(i=0;i<n;i++)
	{
		printf("%d %d\n",srtbst[i],cmt[i]);
	}
	printf("\n\n");
	for(i=0;i<zerobst;i++)
	{
		printf("%d %d \n",arvtime[i],actcmp[i]);
	}
	
	
}
